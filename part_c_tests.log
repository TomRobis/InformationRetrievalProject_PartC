ERROR 2021-01-05 18:53:38,902: report_part_c.docx does not exist.
INFO 2021-01-05 18:53:38,918: Successfully loaded benchmark labels data.
INFO 2021-01-05 18:53:38,918: Successfully loaded queries data.
ERROR 2021-01-05 18:53:38,933: search_engine_1.py does not exist.
ERROR 2021-01-05 18:53:38,933: search_engine_2.py does not exist.
INFO 2021-01-05 18:53:39,553: Successfully imported module search_engine_best.
DEBUG 2021-01-05 18:53:52,012: Building the index in search_engine_best for benchmark data took 12.4503986 seconds.
DEBUG 2021-01-05 18:53:52,027: search_engine_best successfully returned 1 results for the query 'bioweapon'.
DEBUG 2021-01-05 18:53:52,043: search_engine_best successfully returned 1 results for query number 1.
DEBUG 2021-01-05 18:53:52,059: search_engine_best successfully returned 1 results for query number 2.
DEBUG 2021-01-05 18:53:52,074: search_engine_best successfully returned 1 results for query number 3.
DEBUG 2021-01-05 18:53:52,090: search_engine_best successfully returned 1 results for query number 4.
DEBUG 2021-01-05 18:53:52,090: search_engine_best successfully returned 1 results for query number 5.
DEBUG 2021-01-05 18:53:52,106: search_engine_best successfully returned 1 results for query number 6.
DEBUG 2021-01-05 18:53:52,121: search_engine_best successfully returned 1 results for query number 7.
DEBUG 2021-01-05 18:53:52,152: search_engine_best successfully returned 1 results for query number 8.
DEBUG 2021-01-05 18:53:52,184: search_engine_best successfully returned 1 results for query number 9.
DEBUG 2021-01-05 18:53:52,199: search_engine_best successfully returned 1 results for query number 10.
DEBUG 2021-01-05 18:53:52,231: search_engine_best successfully returned 1 results for query number 11.
DEBUG 2021-01-05 18:53:52,246: search_engine_best successfully returned 1 results for query number 12.
DEBUG 2021-01-05 18:53:52,246: search_engine_best successfully returned 1 results for query number 13.
DEBUG 2021-01-05 18:53:52,262: search_engine_best successfully returned 1 results for query number 14.
DEBUG 2021-01-05 18:53:52,277: search_engine_best successfully returned 1 results for query number 15.
DEBUG 2021-01-05 18:53:52,293: search_engine_best successfully returned 1 results for query number 16.
DEBUG 2021-01-05 18:53:52,324: search_engine_best successfully returned 1 results for query number 17.
DEBUG 2021-01-05 18:53:52,340: search_engine_best successfully returned 1 results for query number 18.
DEBUG 2021-01-05 18:53:52,371: search_engine_best successfully returned 1 results for query number 19.
DEBUG 2021-01-05 18:53:52,387: search_engine_best successfully returned 1 results for query number 20.
DEBUG 2021-01-05 18:53:52,402: search_engine_best successfully returned 1 results for query number 21.
DEBUG 2021-01-05 18:53:52,418: search_engine_best successfully returned 1 results for query number 22.
DEBUG 2021-01-05 18:53:52,434: search_engine_best successfully returned 1 results for query number 23.
DEBUG 2021-01-05 18:53:52,465: search_engine_best successfully returned 1 results for query number 24.
DEBUG 2021-01-05 18:53:52,465: search_engine_best successfully returned 1 results for query number 25.
DEBUG 2021-01-05 18:53:52,480: search_engine_best successfully returned 1 results for query number 26.
DEBUG 2021-01-05 18:53:52,512: search_engine_best successfully returned 1 results for query number 27.
DEBUG 2021-01-05 18:53:52,527: search_engine_best successfully returned 1 results for query number 28.
DEBUG 2021-01-05 18:53:52,543: search_engine_best successfully returned 1 results for query number 29.
DEBUG 2021-01-05 18:53:52,559: search_engine_best successfully returned 1 results for query number 30.
DEBUG 2021-01-05 18:53:52,574: search_engine_best successfully returned 1 results for query number 31.
ERROR 2021-01-05 18:53:52,574: The following error occured while testing the module search_engine_best.
ERROR 2021-01-05 18:53:52,574: Can't get information for term: Bill Gates
Traceback (most recent call last):
  File "D:\Python\IR_Project\Part_C\searcher.py", line 101, in get_information_for_q_term
    q_term_tweet_dict = char_postings_file_for_q_term[q_term_lower] #todo tolower added for testing
KeyError: 'bill gates'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:/Python/IR_Project/Part_C/test_part_c_students.py", line 122, in <module>
    q_n_res, q_res = engine.search(q_keywords)
  File "D:\Python\IR_Project\Part_C\search_engine_best.py", line 82, in search
  File "D:\Python\IR_Project\Part_C\searcher.py", line 50, in search
    query_as_list, term_doc_dict, q_max_tf)
  File "D:\Python\IR_Project\Part_C\searcher.py", line 65, in relevant_docs_from_posting
    query_char_to_terms_dict)  # get information for each term in query
  File "D:\Python\IR_Project\Part_C\searcher.py", line 105, in get_information_for_q_term
    raise IOError("Can't get information for term: " + q_term)
OSError: Can't get information for term: Bill Gates
DEBUG 2021-01-05 18:53:52,574: Total runtime was: 0:00:13.672060
